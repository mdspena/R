col = c("lightpink", "lightgreen"),
pch = 16)#,
boxplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa", xlab = "Grupo",
col = c("lightpink", "lightgreen"),
pch = 16)#,
boxplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa", xlab = "Grupo",
col = c("lightpink", "lightgreen"),
pch = 16,
notch = TRUE)
boxplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa", xlab = "Grupo",
col = c("lightpink", "lightgreen"),
pch = 16
)#,notch = TRUE)
boxplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa", xlab = "Grupo",
col = c("lightpink", "lightgreen"),
pch = 16
)
vioplot(dif_massa ~ grupo, data = suplemento,
ylab = "diferença de massa",
xlab = "Grupo",
col = c("lightpink", "lightgreen"))
install.packages("vioplot")
require("vioplot")
vioplot(dif_massa ~ grupo, data = suplemento,
ylab = "diferença de massa",
xlab = "Grupo",
col = c("lightpink", "lightgreen"))
vioplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa",
xlab = "Grupo",
col = c("lightpink", "lightgreen"))
vioplot(dif_massa ~ grupo, data = suplemento,
"ylab" = "diferença de massa",
xlab = "Grupo",
col = c("lightpink", "lightgreen"))
vioplot(dif_massa ~ grupo, data = suplemento,
ylab = "diferença de massa",
xlab = "Grupo",
col = c("lightpink", "lightgreen"))
intconf <- function(x, alpha) {
# parâmetros
media <- mean(x, na.rm = TRUE)
dp <- sd(x, na.rm = TRUE)
n <- length(x)
# nomes dos intervalos
nomes <- c(paste0(alpha/2*100, "%"), paste0((1-alpha/2)*100, "%"))
resultado <- c(media + (qt(alpha/2, n-1) * dp / sqrt(n)),
media + (qt(1-alpha/2, n-1) * dp / sqrt(n)))
names(resultado) <- nomes
resultado
}
intervalos <- tapply(suplemento$dif_massa, suplemento$grupo, intconf, alpha = 0.01)
intervalos # para chamar o resultado
# Criamos um gráfico vazio
plot("n", xlim = c(0.5, 2.5), ylim = c(-1,4), xaxt = "n",
xlab = " Grupo", ylab = "Diferênca de massa", cex.lab = 1.2)
# Adicionamos o eixo X
axis(side = 1, at = c(1,2), labels = c("Controle", "Tratamento"))
# Adicionamos as médias
points(y = medias, x = c(1,2), cex = 2, pch = 16)
# Adicionamos os intervalos para cada média
lines(y = (intervalos$Controle), x = c(1,1), lwd = 3) # Controle
lines(y = (intervalos$Tratamento), x = c(2,2), lwd = 3) # Tratamento
# Adicionamos uma linha horizontal no zero
abline(h = 0, lwd = 3, lty = 2, col = "red")
teste_t <- t.test(dif_massa ~ grupo, data = suplemento)
teste_t # para chamar o resultado
curve(dt(x, 78), from = -11, to = 11, col = "black", xlab = "Valores de t",
main = "Distribuição t Student da hipótese nula",
ylab = "Densidade probabilística", lwd = 2.5)
# adicionamos as cotas en alfa 0.01
abline(v = qt(1-0.01/2, 78), col = "darkred", lwd = 2.5, lty = 3)
abline(v = qt(0.01/2, 78), col = "darkred", lwd = 2.5, lty = 3)
# adicionamos o nosso valor de t
points(x = teste_t$statistic, y = 0, pch = 18, col = "darkblue", cex = 2)
view(lituratus)
View(lituratus)
str(lituratus)
summary(lituratus)
medias <- tapply(lituratus$Forearm, lituratus$Habitat, mean)
medias
View(lituratus)
medias <- tapply(lituratus$body_mass, lituratus$Habitat, mean)
medias
medias <- tapply(suplemento$dif_massa, suplemento$grupo, mean)
medias # para chamar a saída do objeto
medias <- tapply(lituratus$body_mass, lituratus$Habitat, sd)
medias
medias <- tapply(lituratus$body_mass, lituratus$Habitat, mean)
medias
mean(lituratus$body_mass)
lituratus$body_mass
str(lituratus)
medias <- tapply(as.numeric(lituratus$body_mass,NA.rm=TRUE), lituratus$Habitat, mean)
medias
mean(as.numeric(lituratus$body_mass,NA.rm=TRUE))
summary(lituratus)
str(lituratus)
medias <- tapply(lituratus$Forearm, lituratus$Habitat, mean)
medias
medias <- tapply(lituratus$Forearm, lituratus$Habitat, mean, na.rm=T)
medias
medias <- tapply(lituratus$Forearm, lituratus$Habitat, mean, na.rm=TRUE)
medias
desvios <- tapply(lituratus$Forearm, lituratus$Habitat, sd, na.rm=TRUE)
desvios
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(-4,6), ylim = c(0, 0.6))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 10, add = TRUE)
box()
abline(v = medias[1], col = "darkgreen", lwd = 2.5, lty = 3) # Forest
abline(v = medias[2], col = "black", lwd = 2.5, lty = 3) # Urban
# adicionamos a legenda
legend(4, 0.6, legend = c("Forest", "Urban"), bty = "n",
col = c("lightgreen", "lightgray"), pch = 15, pt.cex = 3)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(-4,6), ylim = c(0, 0.6))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 10, add = TRUE)
box()
abline(v = medias[1], col = "darkgreen", lwd = 2.5, lty = 3) # Forest
abline(v = medias[2], col = "black", lwd = 2.5, lty = 3) # Urban
# adicionamos a legenda
legend(4, 0.6, legend = c("Forest", "Urban"), bty = "n",
col = c("lightgreen", "lightgray"), pch = 15, pt.cex = 3)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(-4,60), ylim = c(0, 0.6))
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,60), ylim = c(0, 0.6))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 10, add = TRUE)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,60), ylim = c(0, 0.3))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 10, add = TRUE)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,70), ylim = c(0, 0.3))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 10, add = TRUE)
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 20, add = TRUE)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,70), ylim = c(0, 0.3))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 20, add = TRUE)
box()
abline(v = medias[1], col = "darkgreen", lwd = 2.5, lty = 3) # Forest
abline(v = medias[2], col = "black", lwd = 2.5, lty = 3) # Urban
# adicionamos a legenda
legend(4, 0.6, legend = c("Forest", "Urban"), bty = "n",
col = c("lightgreen", "lightgray"), pch = 15, pt.cex = 3)
# adicionamos a legenda
legend(65, 0.2, legend = c("Forest", "Urban"), bty = "n",
col = c("lightgreen", "lightgray"), pch = 15, pt.cex = 3)
hist(suplemento$dif_massa[suplemento$grupo == "Controle"], # os valores do grupo Controle
xlab = "diferença de massa", ylab = "Frequência",
main = " Histograma da diferença de massa por grupo",
probability = TRUE, col = "lightpink", breaks = 10,
xlim = c(-4,6), ylim = c(0, 0.6))
# adicionamos os do tratamento
hist(suplemento$dif_massa[suplemento$grupo == "Tratamento"], # os valores do grupo Tratamento
probability = TRUE, col = "lightgreen", breaks = 10, add = TRUE)
# Eu gosto dos gráficos fechados então...
box()
# adicionamos umas linhas verticais nas médias
abline(v = medias[1], col = "darkred", lwd = 2.5, lty = 3) # grupo controle
abline(v = medias[2], col = "darkgreen", lwd = 2.5, lty = 3) # tratamento
# adicionamos a legenda
legend(4, 0.6, legend = c("Controle", "Tratamento"), bty = "n",
col = c("lightpink", "lightgreen"), pch = 15, pt.cex = 3)
hist(suplemento$dif_massa[suplemento$grupo == "Controle"], # os valores do grupo Controle
xlab = "diferença de massa", ylab = "Frequência",
main = " Histograma da diferença de massa por grupo",
probability = TRUE, col = "lightpink", breaks = 10,
xlim = c(-4,6), ylim = c(0, 0.6))
hist(suplemento$dif_massa[suplemento$grupo == "Tratamento"], # os valores do grupo Tratamento
probability = TRUE, col = "lightgreen", breaks = 10, add = TRUE)
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,70), ylim = c(0, 0.3))
hist(lituratus$Forearm[lituratus$Habitat == "Urban"],
probability = TRUE, col = "gray", breaks = 20, add = TRUE)
box()
abline(v = medias[1], col = "darkgreen", lwd = 2.5, lty = 3) # Forest
abline(v = medias[2], col = "black", lwd = 2.5, lty = 3) # Urban
# adicionamos a legenda
legend(65, 0.2, legend = c("Forest", "Urban"), bty = "n",
col = c("lightgreen", "lightgray"), pch = 15, pt.cex = 3)
str(lituratus)
summary(lituratus)
boxplot(Forearm ~ Habitat,
data = lituratus,
ylab = "diferença de envergadura de asa",
xlab = "Habitat",
col = c("lightgreen", "lightgray"),
pch = 16, notch = TRUE)
boxplot(Forearm ~ Habitat,
data = lituratus,
ylab = "diferença de envergadura de asa",
xlab = "Habitat",
col = c("lightgreen", "lightgray"),
pch = 16)
vioplot(Forearm ~ Habitat,
data = lituratus,
ylab = "diferença de envergadura de asa",
xlab = "Habitat",
col = c("lightgreen", "lightgray"))
intervalos <- tapply(lituratus$Forearm, lituratus$Habitat, intconf, alpha = 0.01)
intervalos
teste_t <- t.test(Forearm ~ Habitat, data = lituratus)
teste_t
teste_t
curve(dt(x, 78), from = -11, to = 11, col = "black", xlab = "Valores de t",
main = "Distribuição t Student da hipótese nula",
ylab = "Densidade probabilística", lwd = 2.5)
abline(v = qt(1-0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
abline(v = qt(0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
# adicionamos o nosso valor de t
points(x = teste_t$statistic, y = 0, pch = 18, col = "darkblue", cex = 2)
teste_t
curve(dt(x, 78), from = -15, to = 15, col = "black", xlab = "Valores de t",
main = "Distribuição t Student da hipótese nula",
ylab = "Densidade probabilística", lwd = 2.5)
abline(v = qt(1-0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
abline(v = qt(0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
# adicionamos o nosso valor de t
points(x = teste_t$statistic, y = 0, pch = 18, col = "darkblue", cex = 2)
# adicionamos o nosso valor de t
points(x = teste_t$statistic, y = 0, pch = 18, col = "darkblue", cex = 2)
teste_t$statistic
curve(dt(x, 78), from = -25, to = 25, col = "black", xlab = "Valores de t",
main = "Distribuição t Student da hipótese nula",
ylab = "Densidade probabilística", lwd = 2.5)
abline(v = qt(1-0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
abline(v = qt(0.05/2, 78), col = "darkred", lwd = 2.5, lty = 3)
# adicionamos o nosso valor de t
points(x = teste_t$statistic, y = 0, pch = 18, col = "darkblue", cex = 2)
# Se não tiver o pacote pode instalá-lo
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
# Chamar o pacote ao seu ambiente
require(datasets)
# Chamar o conjunto de dados
data(chickwts)
View(chickwts)
# Separar os dados da dieta baseada em soja
soybean <- subset(chickwts, feed == "soybean")
View(soybean)
# Separar os dados da dieta baseada em farinha de carne
meatmeal <- subset(chickwts, feed == "meatmeal")
View(meatmeal)
# Juntamos tudo em um data frame único
chick <- rbind(soybean, meatmeal)
# Redefinimos a variável feed com os dois níveis que temos (originalmente tem mais)
chick$feed <- factor(chick$feed, levels = c("soybean", "meatmeal"))
chick
View(chick)
medianas <- tapply(chick$weight, chick$feed, median)
medianas # para chamar a saída do objeto
vioplot::vioplot(weight ~ feed, data = chick,
"ylab" = "Ganho de massa", xlab = "Dieta",
col = c("lightgreen", "brown"))
vioplot::vioplot(weight ~ feed, data = chick,
"ylab" = "Ganho de massa", xlab = "Dieta",
col = c("lightgreen", "brown"))
dif_medianas <- abs(medianas[[1]] - medianas[[2]])
dif_medianas
# primeiro fazemos uma amostragem com substituição
amostra_bot <- sample(chick$weight, size = nrow(chick), replace = TRUE)
# calculamos as medianas
medianas_bot <- tapply(amostra_bot, chick$feed, median)
# calculamos a diferença das medianas
(abs(medianas_bot[[1]] - medianas_bot[[2]]))
n <- nrow(chick)
B <- 10000
Var <- chick$weight
Grupo <- chick$feed
# Plantamos a semente para garantir a reprodutibilidade
set.seed(123)
# Criamos as B amostras
boot_samples <- matrix( sample(Var, size = n*B, replace = TRUE),
nrow = n, ncol = B)
# exploramos um pouco
dim(boot_samples)
str(boot_samples)
summary(boot_samples)
for (i in 1:B) {
mediana_bot <- tapply(boot_samples[,i], Grupo, median)
boot_dif[i] <- (abs(mediana_bot[[1]] - mediana_bot[[2]]))
}
boot_dif <- numeric(length = B)
for (i in 1:B) {
mediana_bot <- tapply(boot_samples[,i], Grupo, median)
boot_dif[i] <- (abs(mediana_bot[[1]] - mediana_bot[[2]]))
}
# graficamos a densidade probabilística
plot(density(boot_dif), lwd = 2,
xlab = "Diferença de medianas", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
# adicionamos a diferença de medianas calculada (ponto vermelho)
points(dif_medianas, 0, cex = 2, pch = 19, col = "darkred")
p_valor <- (sum(boot_dif >= dif_medianas))/B
p_valor # chamamos
View(tennis)
str(tennis)
summary(tennis)
medianas <- tapply(tennis$pre_test, tennis$pos_test, median)
medianas
medianas <- tapply(chick$weight, chick$feed, median)
medianas # para chamar a saída do objeto
medianas <- tapply(tennis$pre_test, tennis$grupo, median)
medianas
View(tennis)
View(tennis)
View(chickwts)
)
}
View(meatmeal)
medianas <- tapply(tennis$pos_test, tennis$grupo, median)
medianas
medianas <- tapply(tennis$pos_test, tennis$grupo, median, na.rm=TRUE)
medianas
vioplot::vioplot(pos_test ~ grupo, data = tennis,
"ylab" = "Ganho de massa", xlab = "Dieta",
col = c("lightgreen", "brown"))
tennis$dif_motora <- tennis$pos_test - tennis$pre_test
View(tennis)
medianas <- tapply(tennis$dif_motora, tennis$grupo, median, na.rm=TRUE)
medianas
medianas <- tapply(tennis$dif_motora, tennis$grupo, mean, na.rm=TRUE)
medianas
medias <- tapply(tennis$dif_motora, tennis$grupo, mean, na.rm=TRUE)
medias
vioplot::vioplot(dif_motora ~ grupo,
data = tennis,
ylab = "Ganho de massa",
xlab = "Dieta",
col = c("lightgreen", "brown"))
hist(lituratus$Forearm[lituratus$Habitat == "Forest"],
xlab = "diferença de envergadura de asa", ylab = "Frequência",
main = " Histograma da diferença de envergadura de asa por grupo",
probability = TRUE, col = "lightgreen", breaks = 10,
xlim = c(40,70), ylim = c(0, 0.3))
vioplot::vioplot(dif_motora ~ grupo,
data = tennis,
ylab = "Diferença Motora",
xlab = "Grupo",
col = c("lightgreen", "brown"))
dif_medias <- abs(medias[[1]] - medias[[2]])
dif_medias
amostra_bot <- sample(tennis$dif_motora, size = nrow(tennis), replace = TRUE)
# calculamos as medianas
medianas_bot <- tapply(amostra_bot, tennis$grupo, median)
# calculamos a diferença das medianas
(abs(medianas_bot[[1]] - medianas_bot[[2]]))
# calculamos as medianas
medianas_bot <- tapply(amostra_bot, tennis$grupo, median, na.rm=TRUE)
# calculamos a diferença das medianas
(abs(medianas_bot[[1]] - medianas_bot[[2]]))
# calculamos as medianas
medias_bot <- tapply(amostra_bot, tennis$grupo, mean, na.rm=TRUE)
# calculamos a diferença das medianas
(abs(medias_bot[[1]] - medias_bot[[2]]))
n <- nrow(tennis)
B <- 10000
Var <- tennis$dif_motora
Grupo <- tennis$grupo
set.seed(123)
boot_samples <- matrix( sample(Var, size = n*B, replace = TRUE),
nrow = n, ncol = B)
dim(boot_samples)
str(boot_samples)
for (i in 1:B) {
media_bot <- tapply(boot_samples[,i], Grupo, mean)
boot_dif[i] <- (abs(media_bot[[1]] - media_bot[[2]]))
}
plot(density(boot_dif), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medianas, 0, cex = 2, pch = 19, col = "darkred")
points(dif_medias, 0, cex = 2, pch = 19, col = "darkred")
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medias, 0, cex = 2, pch = 19, col = "darkred")
dif_medias
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
xlim(0,3),
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
xlim(0,3),
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
xlim(0,3),
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
xlim(0,3),
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de médias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medias, 0, cex = 2, pch = 19, col = "darkred")
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de médias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
?plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de médias", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
par(fig(3,3,3,3))
fig=c(3,3,3,3)
fig=(3,3,3,3)
fig=c(3,3,3,3)
tennis$dif_motora <- tennis$pos_test - tennis$pre_test
medianas <- tapply(tennis$dif_motora, tennis$grupo, median, na.rm=TRUE)
medianas
vioplot::vioplot(dif_motora ~ grupo,
data = tennis,
ylab = "Diferença Motora",
xlab = "Grupo",
col = c("lightgreen", "brown"))
dif_medianas <- abs(medianas[[1]] - medianas[[2]])
dif_medinaas
dif_medianas
amostra_bot <- sample(tennis$dif_motora, size = nrow(tennis), replace = TRUE)
medianas_bot <- tapply(amostra_bot, tennis$grupo, median, na.rm=TRUE)
(abs(medianas_bot[[1]] - medianas_bot[[2]]))
dif_medianas <- abs(medianas[[1]] - medianas[[2]])
dif_medianas
amostra_bot <- sample(tennis$dif_motora, size = nrow(tennis), replace = TRUE)
medianas_bot <- tapply(amostra_bot, tennis$grupo, median, na.rm=TRUE)
(abs(medianas_bot[[1]] - medianas_bot[[2]]))
n <- nrow(tennis)
B <- 10000
Var <- tennis$dif_motora
Grupo <- tennis$grupo
set.seed(123)
boot_samples <- matrix( sample(Var, size = n*B, replace = TRUE),
nrow = n, ncol = B)
dim(boot_samples)
str(boot_samples)
boot_dif <- numeric(length = B)
for (i in 1:B) {
mediana_bot <- tapply(boot_samples[,i], Grupo, median)
boot_dif[i] <- (abs(mediana_bot[[1]] - mediana_bot[[2]]))
}
plot(density(boot_dif, na.rm=TRUE), lwd = 2,
xlab = "Diferença de medianas", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medianas, 0, cex = 2, pch = 19, col = "darkred")
dif_medianas
for (i in 1:B) {
mediana_bot <- tapply(boot_samples[,i], Grupo, median, na.rm=TRUE)
boot_dif[i] <- (abs(mediana_bot[[1]] - mediana_bot[[2]]))
}
plot(density(boot_dif), lwd = 2,
xlab = "Diferença de medianas", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medianas, 0, cex = 2, pch = 19, col = "darkred")
dif_medianas
teste_t <- t.test(dif_motora ~ grupo, data = tennis)
teste_t
plot(density(boot_dif), lwd = 2,
xlab = "Diferença de medianas", ylab = "Densidade probabilística",
main = "Distribuição Bootstrap do Estatístico de contraste", las = 1)
points(dif_medianas, 0, cex = 2, pch = 19, col = "darkred")
dif_medianas
